# Start networking (comment lines are from /sbin/setup-alpine)

#rc-update --quiet add networking boot
- name: Start networking deamon
  ansible.builtin.service:
    name: networking
    runlevel: boot
    enabled: yes

#rc-update --quiet add seedrng boot || rc-update --quiet add urandom boot

#svc_list="cron crond"
- name: Start crond 
  ansible.builtin.service:
    name: crond
    enabled: yes

#if [ -e /dev/input/event0 ]; then
#	# Only enable acpid for systems with input events entries
#	# https://gitlab.alpinelinux.org/alpine/aports/-/issues/12290
#	svc_list="$svc_list acpid"
#fi
- name: Start acpid 
  ansible.builtin.service:
    name: acpid
    enabled: yes

#for svc in $svc_list; do
#	if rc-service --exists $svc; then
#		rc-update --quiet add $svc
#	fi
#done

## start up the services
#$MOCK openrc ${SSH_CONNECTION:+-n} boot
#$MOCK openrc ${SSH_CONNECTION:+-n} default

## update /etc/hosts - after we have got dhcp address
## Get default fully qualified domain name from *first* domain
## given on *last* search or domain statement.
#_dn=$(sed -n \
#-e '/^domain[[:space:]][[:space:]]*/{s///;s/\([^[:space:]]*\).*$/\1/;h;}' \
#-e '/^search[[:space:]][[:space:]]*/{s///;s/\([^[:space:]]*\).*$/\1/;h;}' \
#-e '${g;p;}' "$ROOT"/etc/resolv.conf 2>/dev/null)

#_hn=$(hostname)
#_hn=${_hn%%.*}

#sed -i -e "s/^127\.0\.0\.1.*/127.0.0.1\t${_hn}.${_dn:-$(get_fqdn my.domain)} ${_hn} localhost.localdomain localhost/" \
#	"$ROOT"/etc/hosts 2>/dev/null

